# Dockerfile.prod
ARG GO_VERSION=1.23

# Build stage
FROM golang:${GO_VERSION}-alpine AS builder

RUN apk add --no-cache git

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

# Build the binary
#RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o grpcserver ./go-server/cmd/server
RUN CGO_ENABLED=0 go build -ldflags="-w -s" -o grpcserver ./go-server/cmd/server

FROM alpine:latest

# Install CA certificates and download grpc_health_probe.
RUN apk --no-cache add ca-certificates wget && \
    wget -q -O /usr/local/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.4.11/grpc_health_probe-linux-amd64 && \
    chmod +x /usr/local/bin/grpc_health_probe

RUN apk --no-cache add ca-certificates

WORKDIR /app

ENV TZ="Africa/Lagos"

# Copy our static executable
COPY --from=builder /app/grpcserver .
COPY  --from=builder /app/.env .

EXPOSE 50051

# Start the gRPC server.
CMD ["./grpcserver"]
